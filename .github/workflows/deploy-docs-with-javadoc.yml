name: Build and Deploy Documentation with Javadoc

on:
  push:
    branches: [ main ]
    paths:
      - 'site/**'
      - 'agent/**'
      - 'server/**'
      - 'common/**'
      - 'pom.xml'
      - '.github/workflows/deploy-docs-with-javadoc.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-with-javadoc"
  cancel-in-progress: false

jobs:
  build-javadoc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Generate Javadoc
        run: |
          # Try to generate Javadoc if Maven 4+ is available
          if ./mvnw --version 2>/dev/null | grep -q "Apache Maven 4"; then
            echo "Maven 4+ detected, generating Javadoc..."
            ./mvnw javadoc:aggregate -DskipTests=true
            
            # Copy generated Javadoc to site directory
            if [ -d "target/site/apidocs" ]; then
              cp -r target/site/apidocs/* site/javadoc/
              echo "Javadoc generated and copied to site directory"
            else
              echo "Javadoc generation failed, using placeholder"
            fi
          else
            echo "Maven 4+ not available, using placeholder Javadoc"
          fi

      - name: Upload Javadoc artifact
        uses: actions/upload-artifact@v4
        with:
          name: javadoc
          path: site/javadoc/
          retention-days: 1

  build-site:
    runs-on: ubuntu-latest
    needs: build-javadoc
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Javadoc artifact
        uses: actions/download-artifact@v4
        with:
          name: javadoc
          path: site/javadoc/

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: site

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install Jekyll dependencies
        run: |
          cd site
          bundle init
          echo "gem 'github-pages', group: :jekyll_plugins" >> Gemfile
          echo "gem 'webrick'" >> Gemfile
          bundle install

      - name: Build with Jekyll
        run: |
          cd site
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-site
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4