# .github/workflows/release.yml
name: Release (agent & server)

on:
  push:
    tags:
      - "v*.*.*"     # tags created by maven-release-plugin, e.g., v1.2.3

permissions:
  contents: write     # needed to create/modify the GitHub Release

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    env:
      # Tag like v1.2.3 -> version 1.2.3
      RELEASE_TAG: ${{ github.ref_name }}
      RELEASE_VERSION: ${{ github.ref_name == '' && '' || github.ref_name startsWith('v') && github.ref_name[1:] || github.ref_name }}

    steps:
      - name: Checkout the tag
        uses: actions/checkout@v5
        with:
          # ensure we build exactly the tag content
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up Temurin JDK
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Build profile release
        run: |
          mvn -B -P release -DskipTests=false verify

      - name: Collect shaded artifacts
        run: |
          mkdir -p dist
          # Grab only shaded jars from the release-built modules
          find . -path "*/target/*-shaded.jar" -print -exec cp {} dist/ \;

          # Sanity: ensure we actually found agent/server shaded jars
          ls -l dist
          if ! ls dist/*-shaded.jar >/dev/null 2>&1; then
            echo "No shaded jars found. Check shade plugin config or profile."
            exit 1
          fi

          # Create checksums
          (cd dist && for f in *-shaded.jar; do sha256sum "$f" > "$f.sha256"; done)

      - name: Create/Update GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_TAG }}
          generate_release_notes: true
          files: |
            dist/*-shaded.jar
            dist/*.sha256
            # dist/*.asc
            # dist/bom.json
