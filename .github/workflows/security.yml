name: Security & Maintenance

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**/pom.xml'
      - '**/package.json'
      - '**/package-lock.json'

env:
  JAVA_VERSION: '21'
  NODE_VERSION: '18'

jobs:
  dependency-check:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run OWASP Dependency Check
      run: |
        mvn org.owasp:dependency-check-maven:check \
          -Dformat=ALL \
          -DfailBuildOnCVSS=7 \
          -DnvdApiKey=${{ secrets.NVD_API_KEY }} \
          -B
          
    - name: Upload dependency check reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-reports
        path: |
          agent/target/dependency-check-report.*
          sample-spring-app/target/dependency-check-report.*
        retention-days: 30
        
    - name: Create security issue on high vulnerabilities
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const title = `ðŸš¨ High Severity Vulnerabilities Detected - ${new Date().toISOString().split('T')[0]}`;
          const body = `
          ## Security Alert
          
          High severity vulnerabilities (CVSS â‰¥ 7.0) have been detected in project dependencies.
          
          ### Next Steps
          1. Review the dependency check reports in the workflow artifacts
          2. Update affected dependencies to secure versions
          3. If no updates are available, consider alternative dependencies
          4. Document any accepted risks with justification
          
          ### Reports
          Check the \`dependency-check-reports\` artifact in this workflow run for detailed information.
          
          **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          **Triggered by:** ${{ github.event_name }}
          **Commit:** ${{ github.sha }}
          `;
          
          // Check if issue already exists
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'security,vulnerability'
          });
          
          const existingIssue = issues.data.find(issue => 
            issue.title.includes('High Severity Vulnerabilities Detected')
          );
          
          if (!existingIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'vulnerability', 'high-priority']
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: existingIssue.number,
              body: `ðŸ”„ **Update:** New high severity vulnerabilities detected in workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
            });
          }

  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run npm audit
      run: |
        cd frontend
        npm audit --audit-level=high
        
    - name: Generate npm audit report
      if: always()
      run: |
        cd frontend
        npm audit --json > npm-audit-report.json || true
        npm audit --audit-level=low > npm-audit-report.txt || true
        
    - name: Upload npm audit reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: npm-audit-reports
        path: frontend/npm-audit-report.*
        retention-days: 30

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Check Maven licenses
      run: |
        mvn org.codehaus.mojo:license-maven-plugin:2.2.0:aggregate-third-party-report -B
        
    - name: Install license checker
      run: |
        cd frontend
        npm ci
        npm install -g license-checker
        
    - name: Check NPM licenses
      run: |
        cd frontend
        license-checker --json > npm-licenses.json
        license-checker --csv > npm-licenses.csv
        
    - name: Upload license reports
      uses: actions/upload-artifact@v4
      with:
        name: license-reports
        path: |
          target/site/third-party-report.html
          frontend/npm-licenses.*
        retention-days: 30

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run SpotBugs
      run: |
        mvn com.github.spotbugs:spotbugs-maven-plugin:4.7.3.6:check -B || true
        
    - name: Run PMD
      run: |
        mvn org.apache.maven.plugins:maven-pmd-plugin:3.21.0:check -B || true
        
    - name: Upload code quality reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: code-quality-reports
        path: |
          agent/target/spotbugsXml.xml
          agent/target/pmdCheck.xml
          sample-spring-app/target/spotbugsXml.xml
          sample-spring-app/target/pmdCheck.xml
        retention-days: 30

  update-dependencies:
    name: Update Dependencies (PR)
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Update Maven dependencies
      run: |
        mvn versions:use-latest-releases -B
        mvn versions:update-properties -B
        
    - name: Update NPM dependencies
      run: |
        cd frontend
        npm update
        npm audit fix || true
        
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Pull Request
      if: steps.changes.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'ðŸ”„ Automated Dependency Updates'
        body: |
          ## Automated Dependency Updates
          
          This PR contains automated updates to project dependencies.
          
          ### Changes Made
          - Updated Maven dependencies to latest releases
          - Updated NPM dependencies
          - Applied automatic security fixes where available
          
          ### Review Checklist
          - [ ] Verify all tests pass
          - [ ] Check for breaking changes in updated dependencies
          - [ ] Review security fixes applied
          - [ ] Ensure documentation is still accurate
          
          **Generated by:** Automated dependency update workflow
          **Trigger:** ${{ github.event_name }}
        branch: automated-dependency-updates
        delete-branch: true
        labels: |
          dependencies
          automated
          maintenance
