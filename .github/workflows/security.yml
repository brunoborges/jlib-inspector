name: Security and Maintenance

on:
  schedule:
    - cron: '0 2 * * 0'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**/pom.xml'
      - '**/package.json'
      - '**/package-lock.json'

env:
  JAVA_VERSION: '21'
  NODE_VERSION: '18'

jobs:
  dependency-check:
    name: Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v5
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
    
      - name: Run OWASP Dependency Check
        run: |
          ./mvnw org.owasp:dependency-check-maven:check \
            -Dformat=ALL -DfailBuildOnCVSS=7 \
            -DnvdApiKey=${{ secrets.NVD_API_KEY }} -B

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: |
            agent/target/dependency-check-report.*
            server/target/dependency-check-report.*
            sample-spring-app/target/dependency-check-report.*
          retention-days: 30

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v8
        with:
          script: |
            const title = `ðŸš¨ High Severity Vulnerabilities Detected - ${new Date().toISOString().split('T')[0]}`;
            const body = `High severity (CVSS â‰¥ 7.0) vulnerabilities detected.\n\nSee artifact 'dependency-check-reports'.\n\nRun: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            const issues = await github.rest.issues.listForRepo({ owner: context.repo.owner, repo: context.repo.repo, state: 'open', labels: 'security,vulnerability'});
            const existing = issues.data.find(i => i.title.includes('High Severity Vulnerabilities Detected'));
            if (!existing) {
              await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body, labels: ['security','vulnerability','high-priority']});
            } else {
              await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: existing.number, body: `ðŸ”„ Update: New findings in run ${{ github.run_id }}`});
            }

  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: cd frontend && npm ci

      - name: Audit (fail on high)
        run: cd frontend && npm audit --audit-level=high

      - name: Generate audit reports
        if: always()
        run: |
          cd frontend
          npm audit --json > npm-audit-report.json || true
          npm audit --audit-level=low > npm-audit-report.txt || true

      - name: Upload audit reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-reports
          path: frontend/npm-audit-report.*
          retention-days: 30

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v5
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Maven third-party report
        run: ./mvnw org.codehaus.mojo:license-maven-plugin:2.2.0:aggregate-third-party-report -B

      - name: NPM license checker
        run: |
          cd frontend
          npm ci
          npx license-checker --json > npm-licenses.json
          npx license-checker --csv > npm-licenses.csv

      - name: Upload license reports
        uses: actions/upload-artifact@v4
        with:
          name: license-reports
          path: |
            target/site/third-party-report.html
            frontend/npm-licenses.*
          retention-days: 30

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v5
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: SpotBugs
        run: ./mvnw com.github.spotbugs:spotbugs-maven-plugin:4.7.3.6:check -B || true

      - name: PMD
        run: ./mvnw org.apache.maven.plugins:maven-pmd-plugin:3.21.0:check -B || true

      - name: Upload quality reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-quality-reports
          path: |
            agent/target/spotbugsXml.xml
            agent/target/pmdCheck.xml
            server/target/spotbugsXml.xml
            server/target/pmdCheck.xml
            sample-spring-app/target/spotbugsXml.xml
            sample-spring-app/target/pmdCheck.xml
          retention-days: 30

  update-dependencies:
    name: Update Dependencies (PR)
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-java@v5
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Update Maven deps
        run: |
          ./mvnw versions:use-latest-releases -B
          ./mvnw versions:update-properties -B

      - name: Update NPM deps
        run: |
          cd frontend
          npm ci
          npm update
          npm audit fix || true

      - name: Detect changes
        id: changes
        run: |
          if git diff --quiet; then echo 'has_changes=false' >> $GITHUB_OUTPUT; else echo 'has_changes=true' >> $GITHUB_OUTPUT; fi
          
      - name: Create PR
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'ðŸ”„ Automated Dependency Updates'
          body: |
            ## Automated Dependency Updates

            This PR updates Maven and NPM dependencies to their latest versions.

            Review checklist:
            - [ ] Tests pass
            - [ ] No breaking changes
            - [ ] Security fixes validated
            - [ ] Docs still accurate
          branch: automated-dependency-updates
          delete-branch: true
          labels: dependencies,automated,maintenance
