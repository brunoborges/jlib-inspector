import React, { useEffect } from 'react';
import { initLucideIcons } from '../utils/helpers';

/* Basic modal explaining how jarId and application appId are derived.
 * jarId definition sourced from JarMetadata.getJarId() JavaDoc.
 * appId definition: generated by agent (likely random/UUID) identifying a JVM instance process lifetime.
 */
const HelpDialog = ({ isOpen, onClose }) => {
  useEffect(() => { initLucideIcons(); }, [isOpen]);
  if (!isOpen) return null;
  return (
    <div className="fixed inset-0 z-50 flex items-start justify-center p-4 sm:p-8 overflow-y-auto bg-black/40">
      <div className="bg-white rounded-xl shadow-2xl max-w-2xl w-full relative animate-fadeIn">
        <div className="flex items-center justify-between px-5 py-4 border-b">
          <h2 className="text-lg font-semibold text-gray-900 flex items-center"><i data-lucide="help-circle" className="w-5 h-5 mr-2"/> Help & Reference</h2>
          <button onClick={onClose} className="p-2 rounded hover:bg-gray-100 text-gray-500" aria-label="Close help"><i data-lucide="x" className="w-5 h-5"/></button>
        </div>
        <div className="px-5 py-5 space-y-6 text-sm leading-relaxed text-gray-700">
          <section>
            <h3 className="font-semibold text-gray-800 mb-1 flex items-center"><i data-lucide="hash" className="w-4 h-4 mr-1"/> JAR Identifier (jarId)</h3>
            <p className="mb-2">Each JAR is assigned a stable <code className="px-1 py-0.5 bg-gray-100 rounded text-xs">jarId</code> used to de-duplicate and correlate across applications.</p>
            <ol className="list-decimal ml-5 space-y-1 text-gray-700">
              <li><strong>If checksum known:</strong> <code className="bg-gray-50 px-1 py-0.5 rounded text-xs">jarId = SHA-256( sha256Hash + ":" + fileName )</code></li>
              <li><strong>Else (checksum pending):</strong> <code className="bg-gray-50 px-1 py-0.5 rounded text-xs">jarId = SHA-256( fileName + ":" + size + ":" + fullPath )</code></li>
            </ol>
            <p className="mt-2 text-xs text-gray-500">When the real checksum becomes available, the jarId may shift from the fallback to the final hash; clients should tolerate a one-time change early in lifecycle.</p>
          </section>
          <section>
            <h3 className="font-semibold text-gray-800 mb-1 flex items-center"><i data-lucide="cpu" className="w-4 h-4 mr-1"/> Application Identifier (appId)</h3>
            <p>The <code className="px-1 py-0.5 bg-gray-100 rounded text-xs">appId</code> uniquely identifies a running JVM observed by the agent. It is generated when the application first registers and remains stable for that JVM process lifetime. Metadata like name/description/tags can be edited without changing the <code className="px-1 py-0.5 bg-gray-100 rounded text-xs">appId</code>.</p>
          </section>
          <section>
            <h3 className="font-semibold text-gray-800 mb-1 flex items-center"><i data-lucide="layers" className="w-4 h-4 mr-1"/> Nested JAR Paths</h3>
            <p>Paths containing <code className="px-1 py-0.5 bg-gray-100 rounded text-xs">!/</code> indicate a nested JAR (e.g. inside a Spring Boot fat JAR). The portion before <code className="px-1 py-0.5 bg-gray-100 rounded text-xs">!/</code> is the container; after is the inner entry path.</p>
          </section>
          <section>
            <h3 className="font-semibold text-gray-800 mb-1 flex items-center"><i data-lucide="info" className="w-4 h-4 mr-1"/> Tips</h3>
            <ul className="list-disc ml-5 space-y-1">
              <li>Use the checksum (when present) to cross-check artifacts externally.</li>
              <li>The Maven search link derives a heuristic artifact name from the file name.</li>
              <li>Hover over relative times to see the precise timestamp (ISO-8601).</li>
            </ul>
          </section>
        </div>
        <div className="px-5 py-4 border-t flex justify-end">
          <button onClick={onClose} className="px-4 py-2 rounded bg-blue-600 text-white text-sm hover:bg-blue-700">Close</button>
        </div>
      </div>
    </div>
  );
};

export default HelpDialog;